/* You can add global styles to this file, and also import other style files */
@import '~ag-grid-community/dist/styles/ag-grid.css';

.container {
  max-width: calc(100vw - 2rem);
  display: block;
  margin: 1rem;
}

// ag-grid.scss defines structural styles and should be imported first
@import '~ag-grid-community/src/styles/ag-grid.scss';
@import '~ag-grid-community/src/styles/ag-theme-alpine-dark/sass/ag-theme-alpine-dark-mixin.scss';
@import '~ag-grid-community/src/styles/ag-theme-alpine-dark/sass/_ag-theme-alpine-dark-default-params.scss';

@import 'css/src/astro.css';

$ag-theme-astro-default-params: (
  // alpine-active-color: var(--colorSecondaryDarken1,  rgb(58, 129, 191)),


  // color of text and icons in primary UI elements like menus
  foreground-color: var(--tableRowTextColor, rgb(255, 255, 255)),

  // color of text in grid cells
  data-color: var(--tableRowTextColor, rgb(255, 255, 255)),

  // color of text and icons in UI elements that need to be slightly less emphasised to avoid distracting attention from data
  secondary-foreground-color:  var(--fontLowContrastColor, rgb(204, 204, 204)),

  // color of text and icons in the header
  header-foreground-color:  var(--tableHeaderTextColor, var(--colorTertiaryLighten3, rgb(169, 178, 188))),
  
  // color of elements that can't be interacted with because they are in a disabled state
  disabled-foreground-color: ag-derived(foreground-color, $opacity: var(--disabledOpacity, 0.4)),

  // Background color of the grid
  background-color: var(--tableRowBackgroundColor, rgb(40, 63, 88)),

  // Background color for all headers, including the grid header, panels etc
  header-background-color: var(--tableHeaderBackgroundColor, var(--colorTertiaryDarken1,  rgb(32, 50, 70))),

  // Background color for second level headings within UI components
  subheader-background-color: var(--tableHeaderBackgroundColor, var(--colorTertiaryDarken1,  rgb(32, 50, 70))),

  // Background color for toolbars directly under subheadings (as used in the chart settings menu)
  subheader-toolbar-background-color: var(--tableHeaderBackgroundColor, var(--colorTertiaryDarken1,  rgb(32, 50, 70))),

  // Background for areas of the interface that contain UI controls, like tool panels and the chart settings menu
  control-panel-background-color: var(--tableControlsBackgroundColor,  var(--colorTertiaryDarken2, rgb(24, 38, 53))),


  // Background color of selected rows in the grid and in dropdown menus
  selected-row-background-color: var(--tableRowSelectedBackgroundColor, var(--colorPrimaryDarken1, rgb(0, 72, 114))),

  // Background color applied to every other row or null to use background-color for all rows
  odd-row-background-color: null,

  // Background color of the overlay shown over the grid when it is covered by an overlay, e.g. a data loading indicator.
  // modal-overlay-background-color: ag-derived(background-color, $opacity: 0.66),

  // Background color when hovering over rows in the grid and in dropdown menus, or null for no rollover effect (note - if you want a rollover on one but not the other, set to null and use CSS to achieve the rollover)
   row-hover-color: var(--tableRowHoverBackgroundColor, var(--colorTertiaryDarken1,  rgb(32, 50, 70))),

  // color to draw around selected cell ranges
   range-selection-border-color: var(--tableCellSelectedBorderColor, var(--colorSecondaryDarken2, rgb(46, 103, 153))),

  // Background color of selected cell ranges. By default, setting this to a semi-transparent color (opacity of 0.1 to 0.5 works well) will generate appropriate values for the range-selection-background-color-{1..4} colors used when multiple ranges overlap.
  // NOTE: if setting this value to a CSS variable, and your app supports overlapping range selections, also set range-selection-background-color-{1..4}.
  // range-selection-background-color: ag-derived(range-selection-border-color, $opacity: 0.2),

  // These 4 parameters are used for fine-grained control over the background color used when 1, 2, 3 or 4 ranges overlap.
  // range-selection-background-color-1: ag-derived(range-selection-background-color),
  // range-selection-background-color-2: ag-derived(range-selection-background-color, $self-overlay: 2),
  // range-selection-background-color-3: ag-derived(range-selection-background-color, $self-overlay: 3),
  // range-selection-background-color-4: ag-derived(range-selection-background-color, $self-overlay: 4),

  // Background color to apply to a cell range when it is copied from or pasted into
  // range-selection-highlight-color: ag-derived(range-selection-border-color),

  // color and thickness of the border drawn under selected tabs, including menus and tool panels
  // selected-tab-underline-color: ag-derived(range-selection-border-color),
  // selected-tab-underline-width: 0,
  // selected-tab-underline-transition-speed: null,

  // Background color for cells that provide categories to the current range chart
  // range-selection-chart-category-background-color: rgba(#00FF84, 0.1),

  // Background color for cells that provide data to the current range chart
  // range-selection-chart-background-color: rgba(#0058FF, 0.1),

  // Rollover color for header cells
  // header-cell-hover-background-color: null,

  // color applied to header cells when the column is being dragged to a new position
  // header-cell-moving-background-color: ag-derived(header-cell-hover-background-color),

  // color to apply when a cell value changes and enableCellChangeFlash is enabled
  // value-change-value-highlight-background-color: rgba(#16A085, 0.5),

  // colors to apply when a value increases or decreases in an agAnimateShowChangeCellRenderer cell
  // value-change-delta-up-color: #43a047,
  // value-change-delta-down-color: #e53935,

  // color for the "chip" that represents a column that has been dragged onto a drop zone
  // chip-background-color: null,

  // By default, color variables can be overridden at runtime by CSS variables, e.g.
  // background-color can be overridden with the CSS var --ag-background-color. Pass true
  // to disable this behaviour.
  // suppress-css-var-overrides: false,

  //
  // BORDERS
  //

  // Draw borders around most UI elements
  // borders: true,

  // Draw the few borders that are critical to UX, e.g. between headers and rows.
  // borders-critical: ag-derived(borders),

  // Draw decorative borders separating UI elements within components
  // borders-secondary: ag-derived(borders),

  // Draw borders around sidebar tabs so that the active tab appears connected to the current tool panel
  // borders-side-button: ag-derived(borders),

  border-radius: 0px,

  // color for border around major UI components like the grid itself, headers, footers and tool panels
  border-color: var(--tableHeaderBorderColor, var(--colorSecondaryDarken4, rgb(15, 34, 51))),

  // color for borders used to separate elements within a major UI component
  // secondary-border-color: ag-derived(border-color),

  // color of the border between grid rows, or null to display no border
  row-border-color:  var(--tableRowBorderColor, var(--colorSecondaryDarken4, rgb(15, 34, 51))),

  // Default border for cells. This can be used to specify the border-style and border-color properties e.g. `dashed red` but the border-width is fixed at 1px.
  // cell-horizontal-border: solid transparent,

  // Separator between columns in the header. Displays between all header cells For best UX, use either this or header-column-resize-handle but not both
  header-column-separator: false,
  // header-column-separator-height: 100%,
  // header-column-separator-width: 1px,
  // header-column-separator-color: ag-derived(border-color, $opacity: 0.5),

  // Visible marker for resizeable columns. Displays in the same position as the column separator, but only when the column is resizeable. For best UX, use either this or header-column-separator but not both
  header-column-resize-handle: true,
  header-column-resize-handle-height: 50%,
  header-column-resize-handle-width: 1px,
  header-column-resize-handle-color: var(--tableHeaderBorderColor, var(--colorSecondaryDarken4, rgb(15, 34, 51))),

  //
  // INPUTS
  //

  // Suppress styling of checkbox/radio/range input elements. If you want to style these yourself, set this to true. If you only want to disable styling for some kinds of input, you can set this to true and e.g. @include ag-native-inputs((checkbox: false)) which will emit styles for all kinds of input except checkboxes.
  // suppress-native-widget-styling: false,

  // input-border-color: var(--inputBorderColor, transparent),
  // input-disabled-border-color: ag-derived(input-border-color, $opacity: 0.3),
  // input-disabled-background-color: null,

  checkbox-background-color: null,
  checkbox-border-radius: 2px,
  // the following are used by the icons in the ag-grid icon-font-family
  checkbox-checked-color: var(--controlBackgroundColor, var(--colorPrimary, rgb(0, 90, 143))),
  checkbox-unchecked-color: var(--controlBorderColor, var(--colorSecondaryLighten1, rgb(77, 172, 255))),
  // checkbox-indeterminate-color: ag-derived(checkbox-unchecked-color),


  // toggle-button-off-border-color: ag-derived(checkbox-unchecked-color),
  // toggle-button-off-background-color: ag-derived(checkbox-unchecked-color),
  // toggle-button-on-border-color: ag-derived(checkbox-checked-color),
  // toggle-button-on-background-color: ag-derived(checkbox-checked-color),
  // toggle-button-switch-background-color: ag-derived(background-color),
  // toggle-button-switch-border-color: ag-derived(toggle-button-off-border-color),
  // toggle-button-border-width: 1px,
  // toggle-button-height: ag-derived(icon-size),
  // toggle-button-width: ag-derived(toggle-button-height, $times: 2),

  input-focus-box-shadow: var(--inputFocusBoxShadow, inset 0 0 0 1px white,
    inset 0 0 0 2px var(--colorPrimary)),
  input-focus-border-color: var(--inputFocusBorderColor, var(--colorSecondary)),

  // CHART SETTINGS

  // color of border around selected chart style
  // minichart-selected-chart-color: ag-derived(checkbox-checked-color),
  // color of dot representing selected page of chart styles
  // minichart-selected-page-color: ag-derived(checkbox-checked-color),


  //
  // SIZING / PADDING / SPACING
  //

  // grid-size is the main control for affecting how tightly data and UI elements are packed together. All padding and spacing in the grid is defined as a multiple of grid-size, so increasing it will make most components larger by increasing their internal white space while leaving the size of text and icons unchanged.
   grid-size: 6px,

  // The size of square icons and icon-buttons
  // icon-size: 12px,

  // These 4 variables set the padding around and spacing between widgets in "widget containers" which are parts of the UI that contain many related widgets, like the set filter menu, charts settings tabs etc.
  // widget-container-horizontal-padding: ag-derived(grid-size, $times: 1.5),
  // widget-container-vertical-padding: ag-derived(grid-size, $times: 1.5),
  // widget-horizontal-spacing: ag-derived(grid-size, $times: 1.5),
  // widget-vertical-spacing: ag-derived(grid-size),

  // Horizontal padding for grid and header cells (vertical padding is not set explicitly, but inferred from row-height / header-height
  // cell-horizontal-padding: ag-derived(grid-size, $times: 3),

  // Horizontal spacing between widgets inside cells (e.g. row group expand buttons and row selection checkboxes)
  // cell-widget-spacing: ag-derived(cell-horizontal-padding),

  // Height of grid rows
  row-height: ag-derived(grid-size, $times: 7, $plus: 0),

  // Height of header rows
   header-height: 42px,

  // Height of items in lists (example of lists are dropdown select inputs and column menu set filters)
  // list-item-height: ag-derived(grid-size, $times: 5),

  // How much to indent child columns in the column tool panel relative to their parent
  // column-select-indent-size: ag-derived(grid-size, $plus: icon-size),

  // How much to indent child rows in the grid relative to their parent row
  // row-group-indent-size: ag-derived(cell-widget-spacing, $plus: icon-size),

  // How much to indent child columns in the filters tool panel relative to their parent
  // filter-tool-panel-group-indent: 16px,

  // Cause tabs to stretch across the full width of the tab panel header
  full-width-tabs: true,

  // Fonts
  font-family: var(--fontFamily, ("Helvetica Neue", sans-serif)),
  font-size: var(--fontSize, 16px),

  // The name of the font family you're using
  icon-font-family: $ag-theme-alpine-icon-font-family, // this var exported by ag-theme-base-font-vars.scss

  // A URI (data: URI or web URL) to load the icon font from. NOTE: if your icon font is already loaded in the app's HTML page, set this to null to avoid embedding unnecessry font data in the compiled theme.
  icons-data: $ag-theme-alpine-icons-data,             // this var exported by ag-theme-base-font-vars.scss
  icons-font-codes: $ag-theme-alpine-icons-font-codes, // this var exported by ag-theme-base-font-vars.scss

  // cards are elements that float above the UI
  // card-radius: ag-derived(border-radius),

  // the default card shadow applies to simple cards like column drag indicators and text editors
  // card-shadow: none,

  // override the shadow for popups - cards that contain complex UI, like menus and charts
  // popup-shadow: 5px 5px 10px rgba(0, 0, 0, 0.3)



);

$ag-theme-astro-params: map-merge($ag-theme-alpine-dark-default-params,$ag-theme-astro-default-params);

// Astro theme is built off Alpine theme
.ag-theme-astro {
  @include ag-theme-alpine-dark($ag-theme-astro-params);

  .ag-header {
    box-shadow: var(--tableHeaderBoxShadow, 0 0.25rem .5rem rgba(0, 0, 0, 0.5));
    z-index: 1;
  }
  .ag-header-cell {
    border-top: var(--tableHeaderAccentColor, var(--colorTertiary, rgb(40, 63, 88))) 1px solid;
  }
  .ag-checkbox-input-wrapper::after {
    border-radius: 1.75px;
    box-shadow: 0 0 0 2px  transparent;
  }
  .ag-checkbox-input-wrapper.ag-checked::after {
    background: var(--colorPrimaryLighten4);
    box-shadow: 0 0 0 2px var(--controlBorderColor);
    color: var(--controlBackgroundColor);
  }
}